# Generated by Django 3.1.2 on 2021-02-08 23:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_plastic_tickets.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('name_en', models.TextField(null=True)),
                ('name_de', models.TextField(null=True)),
                ('markdown_description', models.TextField(help_text='The markdown-formatted description')),
                ('markdown_description_en', models.TextField(help_text='The markdown-formatted description', null=True)),
                ('markdown_description_de', models.TextField(help_text='The markdown-formatted description', null=True)),
                ('url', models.URLField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('ral_color_number', models.PositiveIntegerField(help_text='A RAL classic color number, or 0 if a color can not be specified', validators=[django_plastic_tickets.models.validate_ral_number])),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_plastic_tickets.manufacturer')),
            ],
        ),
        migrations.CreateModel(
            name='MaterialPackage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('empty_weight', models.FloatField(blank=True, help_text='Weight of the empty package in gram', null=True)),
                ('usual_capacity', models.FloatField(blank=True, help_text='Amount of material in gram, which is usually shipped with this package', null=True)),
                ('model', models.TextField(blank=True, help_text='Model name of the spool, as defined by the manufacturer', null=True)),
                ('appearance', models.TextField(help_text='Short description of the appearance of this package')),
                ('manufacturer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='django_plastic_tickets.manufacturer')),
            ],
        ),
        migrations.CreateModel(
            name='MaterialProperty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('name_en', models.TextField(null=True)),
                ('name_de', models.TextField(null=True)),
                ('markdown_description', models.TextField(help_text='The markdown-formatted description')),
                ('markdown_description_en', models.TextField(help_text='The markdown-formatted description', null=True)),
                ('markdown_description_de', models.TextField(help_text='The markdown-formatted description', null=True)),
            ],
            options={
                'verbose_name_plural': 'Material properties',
            },
        ),
        migrations.CreateModel(
            name='MaterialStock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.PositiveIntegerField(help_text='The internal label to identify the material', unique=True)),
                ('initial_material_weight', models.FloatField(help_text='Initial weight of the material in gram, not including the weight of the package')),
                ('current_weight', models.FloatField(help_text='Current weight of the material in gram, including the weight of the package')),
                ('price', models.FloatField(blank=True, help_text='Total price, including the package.', null=True)),
                ('usage_comment', models.TextField(blank=True, help_text='Hints about how to use this material', null=True)),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_plastic_tickets.material')),
                ('owner', models.ForeignKey(help_text='The owner of the material', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_plastic_tickets.materialpackage')),
            ],
        ),
        migrations.CreateModel(
            name='ProductionMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('name_en', models.TextField(null=True)),
                ('name_de', models.TextField(null=True)),
                ('markdown_description', models.TextField(help_text='The markdown-formatted description')),
                ('markdown_description_en', models.TextField(help_text='The markdown-formatted description', null=True)),
                ('markdown_description_de', models.TextField(help_text='The markdown-formatted description', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='FilamentMaterial',
            fields=[
                ('material_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='django_plastic_tickets.material')),
                ('nozzle_temp', models.FloatField(blank=True, help_text='Optimal nozzle temperature', null=True)),
                ('bed_temp', models.FloatField(blank=True, help_text='Optimal bed temperature', null=True)),
                ('diameter', models.FloatField(blank=True, default=1.75, help_text='Diameter of the filament', null=True)),
            ],
            bases=('django_plastic_tickets.material',),
        ),
        migrations.CreateModel(
            name='ResinMaterial',
            fields=[
                ('material_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='django_plastic_tickets.material')),
            ],
            bases=('django_plastic_tickets.material',),
        ),
        migrations.CreateModel(
            name='PrintConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FilePathField()),
                ('count', models.PositiveIntegerField()),
                ('material_stocks', models.ManyToManyField(to='django_plastic_tickets.MaterialStock')),
                ('ticket', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='django_plastic_tickets.ticket')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MaterialType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('name_en', models.TextField(null=True)),
                ('name_de', models.TextField(null=True)),
                ('markdown_description', models.TextField(help_text='The markdown-formatted description')),
                ('markdown_description_en', models.TextField(help_text='The markdown-formatted description', null=True)),
                ('markdown_description_de', models.TextField(help_text='The markdown-formatted description', null=True)),
                ('density', models.FloatField(blank=True, help_text='Density in g/cm^3', null=True)),
                ('production_method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_plastic_tickets.productionmethod')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='material',
            name='properties',
            field=models.ManyToManyField(blank=True, to='django_plastic_tickets.MaterialProperty'),
        ),
        migrations.AddField(
            model_name='material',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_plastic_tickets.materialtype'),
        ),
    ]
